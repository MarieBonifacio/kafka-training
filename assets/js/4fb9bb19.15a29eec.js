"use strict";(self.webpackChunkkafka_training=self.webpackChunkkafka_training||[]).push([[6900],{3370:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>t,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>u});const s=JSON.parse('{"id":"Envoi-objets-metier-JSON","title":"Envoi d\'objets m\xe9tier en JSON","description":"Ce document explique comment envoyer des objets m\xe9tier en JSON en utilisant Kafka.","source":"@site/docs/04-Envoi-objets-metier-JSON.md","sourceDirName":".","slug":"/Envoi-objets-metier-JSON","permalink":"/kafka-training/docs/Envoi-objets-metier-JSON","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/04-Envoi-objets-metier-JSON.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"title":"Envoi d\'objets m\xe9tier en JSON","description":"Ce document explique comment envoyer des objets m\xe9tier en JSON en utilisant Kafka."},"sidebar":"tutorialSidebar","previous":{"title":"Translate your site","permalink":"/kafka-training/docs/tutorial-extras/translate-your-site"}}');var a=n(4848),o=n(8453);const i={title:"Envoi d'objets m\xe9tier en JSON",description:"Ce document explique comment envoyer des objets m\xe9tier en JSON en utilisant Kafka."},t=void 0,c={},u=[{value:"\ud83c\udfaf Objectif",id:"-objectif",level:2},{value:"Ce qu\u2019on va couvrir :",id:"ce-quon-va-couvrir-",level:2},{value:"\ud83e\udde0 Pourquoi Jackson ?",id:"-pourquoi-jackson-",level:2},{value:"\ud83e\uddea Exemple concret : l&#39;objet <code>Person</code>",id:"-exemple-concret--lobjet-person",level:2},{value:"R\xe9sum\xe9 des fichiers \xe0 ce stade :",id:"r\xe9sum\xe9-des-fichiers-\xe0-ce-stade-",level:3},{value:"\ud83d\udce6 Ajouter Jackson et les s\xe9rializers Kafka",id:"-ajouter-jackson-et-les-s\xe9rializers-kafka",level:2},{value:"\ud83d\udee0\ufe0f Producteur Kafka avec Jackson",id:"\ufe0f-producteur-kafka-avec-jackson",level:2},{value:"Test d\u2019int\xe9gration avec Awaitility",id:"test-dint\xe9gration-avec-awaitility",level:2},{value:"\u2705 Ce que tu as appris ici",id:"-ce-que-tu-as-appris-ici",level:2},{value:"\ud83d\udcda \xc0 suivre",id:"-\xe0-suivre",level:2}];function l(e){const r={blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(r.h2,{id:"-objectif",children:"\ud83c\udfaf Objectif"}),"\n",(0,a.jsx)(r.p,{children:"Passer de simples cha\xeenes de caract\xe8res (String) \xe0 des objets Java (POJO) envoy\xe9s et re\xe7us via Kafka, en les s\xe9rialisant/d\xe9s\xe9rialisant automatiquement en JSON."}),"\n",(0,a.jsx)(r.h2,{id:"ce-quon-va-couvrir-",children:"Ce qu\u2019on va couvrir :"}),"\n",(0,a.jsxs)(r.p,{children:["\u2705 Cr\xe9er un objet Java (",(0,a.jsx)(r.code,{children:"Person"}),")"]}),"\n",(0,a.jsx)(r.p,{children:"\u2705 L\u2019envoyer via Kafka apr\xe8s s\xe9rialisation JSON"}),"\n",(0,a.jsx)(r.p,{children:"\u2705 Le recevoir et le d\xe9s\xe9rialiser automatiquement gr\xe2ce \xe0 Jackson"}),"\n",(0,a.jsx)(r.hr,{}),"\n",(0,a.jsx)(r.h1,{id:"-s\xe9rialiser-des-objets-java-avec-jackson-dans-kafka",children:"\ud83d\udd04 S\xe9rialiser des objets Java avec Jackson dans Kafka"}),"\n",(0,a.jsx)(r.hr,{}),"\n",(0,a.jsx)(r.h2,{id:"-pourquoi-jackson-",children:"\ud83e\udde0 Pourquoi Jackson ?"}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.strong,{children:"Jackson"})," est une biblioth\xe8que Java tr\xe8s populaire pour transformer des objets Java en JSON (s\xe9rialisation), et inversement (d\xe9s\xe9rialisation)."]}),"\n",(0,a.jsxs)(r.p,{children:["Kafka ne comprend pas les objets Java \u2014 il envoie des ",(0,a.jsx)(r.strong,{children:"tableaux d'octets"})," ou du texte.",(0,a.jsx)(r.br,{}),"\n","Pour transmettre un objet m\xe9tier comme ",(0,a.jsx)(r.code,{children:"Person"}),", nous devons donc le ",(0,a.jsx)(r.strong,{children:"convertir en JSON"}),", puis le retransformer \xe0 la r\xe9ception."]}),"\n",(0,a.jsx)(r.hr,{}),"\n",(0,a.jsxs)(r.h2,{id:"-exemple-concret--lobjet-person",children:["\ud83e\uddea Exemple concret : l'objet ",(0,a.jsx)(r.code,{children:"Person"})]}),"\n",(0,a.jsx)(r.p,{children:"Voici une classe simple repr\xe9sentant un objet m\xe9tier :"}),"\n",(0,a.jsx)(r.p,{children:"\ud83d\udcc4 Fichier:"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-bash",children:"src/main/java/com/example/kafka/model/Person.java\n"})}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-java",children:'package com.example.kafka;\n\npublic class Person {\n    public String name;\n    public int age;\n\n    // Obligatoire pour Jackson (constructeur vide)\n    public Person() {}\n\n    public Person(String name, int age) {\n        this.name = name;\n        this.age = age;\n    }\n\n    @Override\n    public String toString() {\n        return "Person{name=\'" + name + "\', age=" + age + "}";\n    }\n}\n'})}),"\n",(0,a.jsxs)(r.blockquote,{children:["\n",(0,a.jsx)(r.p,{children:"\ud83d\udccc Jackson a besoin d\u2019un constructeur vide pour pouvoir instancier les objets lors de la d\xe9s\xe9rialisation."}),"\n"]}),"\n",(0,a.jsx)(r.h3,{id:"r\xe9sum\xe9-des-fichiers-\xe0-ce-stade-",children:"R\xe9sum\xe9 des fichiers \xe0 ce stade :"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-bash",children:"src/\n\u2514\u2500\u2500 main/\n    \u2514\u2500\u2500 java/\n        \u2514\u2500\u2500 com/\n            \u2514\u2500\u2500 example/\n                \u2514\u2500\u2500 kafka/\n                    \u251c\u2500\u2500 service/\n                    \u2502   \u251c\u2500\u2500 KafkaProducerService.java\n                    \u2502   \u2514\u2500\u2500 KafkaConsumerService.java\n                    \u251c\u2500\u2500 model/\n                    \u2502   \u2514\u2500\u2500 Person.java\n                    \u2514\u2500\u2500 KafkaIntegrationTest.java  \u2190 (ou dans test/)\n"})}),"\n",(0,a.jsx)(r.hr,{}),"\n",(0,a.jsx)(r.h2,{id:"-ajouter-jackson-et-les-s\xe9rializers-kafka",children:"\ud83d\udce6 Ajouter Jackson et les s\xe9rializers Kafka"}),"\n",(0,a.jsxs)(r.p,{children:["Dans ton ",(0,a.jsx)(r.code,{children:"pom.xml"}),", ajoute :"]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-xml",children:" \x3c!-- Jackson core --\x3e\n<dependency>\n  <groupId>com.fasterxml.jackson.core</groupId>\n  <artifactId>jackson-databind</artifactId>\n  <version>2.15.2</version>\n</dependency>\n\n\x3c!-- Jackson Kafka (serializer + deserializer d\xe9j\xe0 pr\xeats) --\x3e\n<dependency>\n    <groupId>io.confluent</groupId>\n    <artifactId>kafka-json-schema-serializer</artifactId>\n    <version>7.5.0</version>\n</dependency>\n"})}),"\n",(0,a.jsxs)(r.blockquote,{children:["\n",(0,a.jsx)(r.p,{children:"\ud83d\udfe8 Note : si jamais tu ne veux pas utiliser la lib de Confluent, on peut aussi faire nos propres JsonSerializer et JsonDeserializer manuellement. Mais Confluent fonctionne bien pour un test simple."}),"\n"]}),"\n",(0,a.jsx)(r.hr,{}),"\n",(0,a.jsx)(r.h2,{id:"\ufe0f-producteur-kafka-avec-jackson",children:"\ud83d\udee0\ufe0f Producteur Kafka avec Jackson"}),"\n",(0,a.jsx)(r.p,{children:"\ud83d\udcc4 Fichier :"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-bash",children:"src/main/java/com/example/kafka/service/KafkaProducerServicePerson.java\n"})}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-java",children:"package com.example.kafka.service;\n\nimport com.example.kafka.model.Person;\nimport org.apache.kafka.clients.producer.*;\nimport org.apache.kafka.common.serialization.StringSerializer;\nimport io.confluent.kafka.serializers.json.KafkaJsonSchemaSerializer;\n\nimport java.util.Properties;\n\n/**\n * Producteur Kafka configur\xe9 pour envoyer des objets Person en JSON.\n */\npublic class KafkaProducerServicePerson {\n    // Classe responsable de l'envoi de messages Kafka contenant des objets de type Person.\n\n    private final String bootstrapServers;\n    // Adresse des serveurs Kafka (bootstrap servers) utilis\xe9e pour se connecter au cluster Kafka.\n\n    public KafkaProducerServicePerson(String bootstrapServers) {\n        this.bootstrapServers = bootstrapServers;\n        // Constructeur qui initialise l'adresse des serveurs Kafka.\n    }\n\n    public void send(String topic, String key, Person person) {\n        // M\xe9thode pour envoyer un objet Person dans un topic Kafka donn\xe9 avec une cl\xe9 sp\xe9cifi\xe9e.\n\n        Properties props = new Properties();\n        // Cr\xe9ation d'un objet Properties pour configurer le producteur Kafka.\n\n        props.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, bootstrapServers);\n        // Configuration de l'adresse des serveurs Kafka (bootstrap servers).\n\n        props.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class.getName());\n        // Configuration du s\xe9rialiseur pour les cl\xe9s (ici, les cl\xe9s sont des cha\xeenes de caract\xe8res).\n\n        props.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, KafkaJsonSchemaSerializer.class.getName());\n        // Configuration du s\xe9rialiseur pour les valeurs (ici, les valeurs sont des objets Person s\xe9rialis\xe9s en JSON).\n\n        try (Producer<String, Person> producer = new KafkaProducer<>(props)) {\n            // Cr\xe9ation d'un producteur Kafka avec les propri\xe9t\xe9s configur\xe9es.\n            // Le bloc try-with-resources garantit que le producteur sera ferm\xe9 automatiquement.\n\n            ProducerRecord<String, Person> record = new ProducerRecord<>(topic, key, person);\n            // Cr\xe9ation d'un enregistrement Kafka (message) avec le topic, la cl\xe9 et l'objet Person sp\xe9cifi\xe9s.\n\n            producer.send(record);\n            // Envoi asynchrone du message au cluster Kafka.\n\n            producer.flush();\n            // Vidage des messages en attente pour s'assurer que le message est bien envoy\xe9 avant de fermer le producteur.\n        }\n        // Le producteur Kafka est automatiquement ferm\xe9 \xe0 la fin du bloc try-with-resources.\n    }\n}\n"})}),"\n",(0,a.jsxs)(r.blockquote,{children:["\n",(0,a.jsxs)(r.p,{children:["\ud83d\udfe8 Note : on utilise ",(0,a.jsx)(r.code,{children:"KafkaJsonSchemaSerializer"})," pour la s\xe9rialisation de l'objet ",(0,a.jsx)(r.code,{children:"Person"}),"."]}),"\n"]}),"\n",(0,a.jsx)(r.hr,{}),"\n",(0,a.jsx)(r.h2,{id:"test-dint\xe9gration-avec-awaitility",children:"Test d\u2019int\xe9gration avec Awaitility"}),"\n",(0,a.jsx)(r.p,{children:"\ud83d\udcc4 Fichier :"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-bash",children:"src/test/java/com/example/kafka/KafkaIntegrationTestPerson.java\n"})}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-java",children:"package com.example.kafka.service;\n\nimport com.example.kafka.model.Person;\nimport org.apache.kafka.clients.producer.*;\nimport org.apache.kafka.common.serialization.StringSerializer;\nimport io.confluent.kafka.serializers.json.KafkaJsonSchemaSerializer;\n\nimport java.util.Properties;\n\n/**\n * Producteur Kafka configur\xe9 pour envoyer des objets Person en JSON.\n */\npublic class KafkaProducerServicePerson {\n    // Classe responsable de l'envoi de messages Kafka contenant des objets de type Person.\n\n    private final String bootstrapServers;\n    // Adresse des serveurs Kafka (bootstrap servers) utilis\xe9e pour se connecter au cluster Kafka.\n\n    public KafkaProducerServicePerson(String bootstrapServers) {\n        this.bootstrapServers = bootstrapServers;\n        // Constructeur qui initialise l'adresse des serveurs Kafka.\n    }\n\n    public void send(String topic, String key, Person person) {\n        // M\xe9thode pour envoyer un objet Person dans un topic Kafka donn\xe9 avec une cl\xe9 sp\xe9cifi\xe9e.\n\n        Properties props = new Properties();\n        // Cr\xe9ation d'un objet Properties pour configurer le producteur Kafka.\n\n        props.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, bootstrapServers);\n        // Configuration de l'adresse des serveurs Kafka (bootstrap servers).\n\n        props.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class.getName());\n        // Configuration du s\xe9rialiseur pour les cl\xe9s (ici, les cl\xe9s sont des cha\xeenes de caract\xe8res).\n\n        props.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, KafkaJsonSchemaSerializer.class.getName());\n        // Configuration du s\xe9rialiseur pour les valeurs (ici, les valeurs sont des objets Person s\xe9rialis\xe9s en JSON).\n\n        try (Producer<String, Person> producer = new KafkaProducer<>(props)) {\n            // Cr\xe9ation d'un producteur Kafka avec les propri\xe9t\xe9s configur\xe9es.\n            // Le bloc try-with-resources garantit que le producteur sera ferm\xe9 automatiquement.\n\n            ProducerRecord<String, Person> record = new ProducerRecord<>(topic, key, person);\n            // Cr\xe9ation d'un enregistrement Kafka (message) avec le topic, la cl\xe9 et l'objet Person sp\xe9cifi\xe9s.\n\n            producer.send(record);\n            // Envoi asynchrone du message au cluster Kafka.\n\n            producer.flush();\n            // Vidage des messages en attente pour s'assurer que le message est bien envoy\xe9 avant de fermer le producteur.\n        }\n        // Le producteur Kafka est automatiquement ferm\xe9 \xe0 la fin du bloc try-with-resources.\n    }\n}\n"})}),"\n",(0,a.jsx)(r.hr,{}),"\n",(0,a.jsx)(r.h2,{id:"-ce-que-tu-as-appris-ici",children:"\u2705 Ce que tu as appris ici"}),"\n",(0,a.jsx)(r.p,{children:"\u2714\ufe0f Comment utiliser Jackson pour transformer un objet Java en JSON dans Kafka"}),"\n",(0,a.jsx)(r.p,{children:"\u2714\ufe0f Comment configurer Kafka pour consommer ce JSON automatiquement"}),"\n",(0,a.jsx)(r.p,{children:"\u2714\ufe0f Comment r\xe9aliser un test d\u2019int\xe9gration de bout en bout avec des objets m\xe9tier"}),"\n",(0,a.jsx)(r.hr,{}),"\n",(0,a.jsx)(r.h2,{id:"-\xe0-suivre",children:"\ud83d\udcda \xc0 suivre"}),"\n",(0,a.jsx)(r.p,{children:"Tester plusieurs objets JSON"}),"\n",(0,a.jsx)(r.p,{children:"Ajouter des champs imbriqu\xe9s"}),"\n",(0,a.jsx)(r.p,{children:"G\xe9rer les erreurs de d\xe9s\xe9rialisation"})]})}function d(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,a.jsx)(r,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>i,x:()=>t});var s=n(6540);const a={},o=s.createContext(a);function i(e){const r=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function t(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),s.createElement(o.Provider,{value:r},e.children)}}}]);