"use strict";(self.webpackChunkkafka_training=self.webpackChunkkafka_training||[]).push([[6605],{8453:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>o});var r=n(6540);const a={},t=r.createContext(a);function i(e){const s=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),r.createElement(t.Provider,{value:s},e.children)}},8977:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>u,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"Envoi-messages-multiples","title":"Envoi de messages multiples","description":"Ce document explique comment envoyer plusieurs messages en utilisant Kafka.","source":"@site/docs/03-Envoi-messages-multiples.md","sourceDirName":".","slug":"/Envoi-messages-multiples","permalink":"/kafka-training/docs/Envoi-messages-multiples","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/03-Envoi-messages-multiples.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"Envoi de messages multiples","description":"Ce document explique comment envoyer plusieurs messages en utilisant Kafka."},"sidebar":"tutorialSidebar","previous":{"title":"Congratulations!","permalink":"/kafka-training/docs/tutorial-basics/congratulations"},"next":{"title":"Tutorial - Extras","permalink":"/kafka-training/docs/category/tutorial---extras"}}');var a=n(4848),t=n(8453);const i={title:"Envoi de messages multiples",description:"Ce document explique comment envoyer plusieurs messages en utilisant Kafka."},o=void 0,u={},c=[{value:"\ud83c\udfaf Objectif",id:"-objectif",level:2},{value:"Ce qu\u2019on va couvrir :",id:"ce-quon-va-couvrir-",level:2},{value:"\ud83d\udee0\ufe0f Nouvelle m\xe9thode : <code>sendBatch(...)</code>",id:"\ufe0f-nouvelle-m\xe9thode--sendbatch",level:2},{value:"\ud83e\udde0 Pourquoi c\u2019est utile",id:"-pourquoi-cest-utile",level:2},{value:"Ce que tu as appris ici",id:"ce-que-tu-as-appris-ici",level:2},{value:"\ud83d\udcda \xc0 suivre",id:"-\xe0-suivre",level:2},{value:"\u270d\ufe0f \xc0 faire",id:"\ufe0f-\xe0-faire",level:2}];function l(e){const s={code:"code",h2:"h2",hr:"hr",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.h2,{id:"-objectif",children:"\ud83c\udfaf Objectif"}),"\n",(0,a.jsxs)(s.p,{children:["Envoyer plusieurs messages en une seule fois dans un topic Kafka, en utilisant une m\xe9thode de type ",(0,a.jsx)(s.code,{children:"sendBatch(...)"}),"."]}),"\n",(0,a.jsx)(s.h2,{id:"ce-quon-va-couvrir-",children:"Ce qu\u2019on va couvrir :"}),"\n",(0,a.jsxs)(s.p,{children:["\u2705 Cr\xe9er une m\xe9thode ",(0,a.jsx)(s.code,{children:"sendBatch(...)"})," dans le service KafkaProducerService"]}),"\n",(0,a.jsx)(s.p,{children:"\u2705 \xc9crire un test d\u2019int\xe9gration pour v\xe9rifier l\u2019envoi de plusieurs messages"}),"\n",(0,a.jsx)(s.p,{children:"\u2705 Utiliser Awaitility pour attendre la r\xe9ception des messages dans le topic Kafka"}),"\n",(0,a.jsx)(s.p,{children:"\u2705 V\xe9rifier que les messages re\xe7us correspondent \xe0 ceux envoy\xe9s"}),"\n",(0,a.jsxs)(s.h2,{id:"\ufe0f-nouvelle-m\xe9thode--sendbatch",children:["\ud83d\udee0\ufe0f Nouvelle m\xe9thode : ",(0,a.jsx)(s.code,{children:"sendBatch(...)"})]}),"\n",(0,a.jsxs)(s.p,{children:["Voici le code ajout\xe9 dans ",(0,a.jsx)(s.code,{children:"KafkaProducerService"})," :"]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-java",children:"    public void sendBatch(String topic, List<Map.Entry<String, String>> messages) {\n        // M\xe9thode pour envoyer une liste de messages (cl\xe9/valeur) dans un topic Kafka donn\xe9.\n\n        Properties props = new Properties();\n        // Cr\xe9ation d'un objet Properties pour configurer le producteur Kafka.\n\n        props.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, bootstrapServers);\n        // Configuration de l'adresse des serveurs Kafka (bootstrap servers).\n\n        props.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class.getName());\n        // Configuration du s\xe9rialiseur pour les cl\xe9s (ici, les cl\xe9s sont des cha\xeenes de caract\xe8res).\n\n        props.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, StringSerializer.class.getName());\n        // Configuration du s\xe9rialiseur pour les valeurs (ici, les valeurs sont des cha\xeenes de caract\xe8res).\n\n        try (Producer<String, String> producer = new KafkaProducer<>(props)) {\n            // Cr\xe9ation d'un producteur Kafka avec les propri\xe9t\xe9s configur\xe9es.\n            // Le bloc try-with-resources garantit que le producteur sera ferm\xe9 automatiquement.\n\n            for (Map.Entry<String, String> entry : messages) {\n                // Parcourt chaque message (cl\xe9/valeur) de la liste des messages.\n\n                ProducerRecord<String, String> record = new ProducerRecord<>(topic, entry.getKey(), entry.getValue());\n                // Cr\xe9e un enregistrement Kafka (message) avec le topic, la cl\xe9 et la valeur sp\xe9cifi\xe9s.\n\n                producer.send(record);\n                // Envoie le message au cluster Kafka de mani\xe8re asynchrone.\n            }\n\n            producer.flush();\n            // Vide les messages en attente pour s'assurer que tous les messages ont \xe9t\xe9 envoy\xe9s avant de fermer le producteur.\n        }\n        // Le producteur Kafka est automatiquement ferm\xe9 \xe0 la fin du bloc try-with-resources.\n    }\n"})}),"\n",(0,a.jsxs)(s.p,{children:["Voici le code ajout\xe9 dans ",(0,a.jsx)(s.code,{children:"KafkaIntegrationTest"})," :"]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-java",children:'@Testcontainers\n// Annotation indiquant que cette classe utilise Testcontainers pour g\xe9rer des conteneurs Docker dans les tests.\n\npublic class KafkaIntegrationTest {\n// D\xe9claration de la classe de test pour tester l\'int\xe9gration avec Kafka.\n\n    @Container\n    // Annotation indiquant que ce conteneur Kafka sera g\xe9r\xe9 automatiquement par Testcontainers.\n\n    static KafkaContainer kafka = new KafkaContainer(\n        DockerImageName.parse("confluentinc/cp-kafka:7.2.1")\n                       .asCompatibleSubstituteFor("apache/kafka")\n    );\n    // D\xe9claration d\'un conteneur Kafka bas\xe9 sur l\'image Docker "confluentinc/cp-kafka:7.2.1".\n    // Cette image est utilis\xe9e comme substitut compatible pour Apache Kafka.\n\n    @Test\n    // Annotation indiquant qu\'il s\'agit d\'un test unitaire.\n    \n    void testKafkaBatchSending() {\n    // M\xe9thode de test pour v\xe9rifier l\'envoi et la r\xe9ception de messages Kafka en lot.\n    \n        String topic = "test-batch";\n        // Nom du topic Kafka utilis\xe9 pour le test.\n    \n        KafkaProducerService producer = new KafkaProducerService(kafka.getBootstrapServers());\n        // Instancie un service Kafka Producer avec l\'adresse des serveurs Kafka fournie par le conteneur.\n    \n        KafkaConsumerService consumer = new KafkaConsumerService(kafka.getBootstrapServers(), "test-group-batch");\n        // Instancie un service Kafka Consumer avec l\'adresse des serveurs Kafka et un groupe de consommateurs.\n    \n        List<Map.Entry<String, String>> messages = List.of(\n            Map.entry("k1", "v1"),\n            Map.entry("k2", "v2"),\n            Map.entry("k3", "v3")\n        );\n        // Cr\xe9e une liste de messages (cl\xe9/valeur) \xe0 envoyer au topic Kafka.\n    \n        System.out.println("\ud83d\udce4 Envoi de 3 messages dans le topic");\n        // Affiche un message indiquant que les messages sont en cours d\'envoi.\n    \n        producer.sendBatch(topic, messages);\n        // Envoie les messages en lot au topic Kafka sp\xe9cifi\xe9.\n    \n        Awaitility.await()\n                .atMost(10, TimeUnit.SECONDS)\n                // D\xe9finit une dur\xe9e maximale d\'attente de 10 secondes pour que la condition soit remplie.\n    \n                .pollInterval(Duration.ofMillis(500))\n                // D\xe9finit un intervalle de 500 millisecondes entre chaque v\xe9rification de la condition.\n    \n                .untilAsserted(() -> {\n                    // Ex\xe9cute une v\xe9rification r\xe9p\xe9t\xe9e jusqu\'\xe0 ce que la condition d\xe9finie soit remplie ou que le d\xe9lai maximal soit atteint.\n    \n                    List<ConsumerRecord<String, String>> received =\n                        consumer.pollMessages(topic, Duration.ofMillis(500));\n                    // R\xe9cup\xe8re les messages du topic Kafka en utilisant le consommateur, avec un d\xe9lai d\'attente de 500 millisecondes.\n    \n                    assertEquals(3, received.size(), "Le nombre de messages re\xe7us est incorrect");\n                    // V\xe9rifie que le nombre de messages re\xe7us est \xe9gal \xe0 3. Si ce n\'est pas le cas, le test \xe9choue avec un message d\'erreur.\n    \n                    for (int i = 0; i < messages.size(); i++) {\n                        // Parcourt les messages envoy\xe9s pour les comparer aux messages re\xe7us.\n    \n                        assertEquals(messages.get(i).getKey(), received.get(i).key());\n                        // V\xe9rifie que la cl\xe9 du message re\xe7u correspond \xe0 la cl\xe9 du message envoy\xe9.\n    \n                        assertEquals(messages.get(i).getValue(), received.get(i).value());\n                        // V\xe9rifie que la valeur du message re\xe7u correspond \xe0 la valeur du message envoy\xe9.\n                    }\n                });\n    \n        consumer.close();\n        // Ferme le consommateur Kafka pour lib\xe9rer les ressources.\n    }\n'})}),"\n",(0,a.jsx)(s.h2,{id:"-pourquoi-cest-utile",children:"\ud83e\udde0 Pourquoi c\u2019est utile"}),"\n",(0,a.jsx)(s.p,{children:"\u2714\ufe0f Permet de tester des cas plus proches du r\xe9el"}),"\n",(0,a.jsx)(s.p,{children:"\u2714\ufe0f Pose les bases pour tester des batchs d\u2019\xe9v\xe9nements"}),"\n",(0,a.jsx)(s.p,{children:"\u2714\ufe0f Montre comment Kafka peut g\xe9rer plusieurs messages en un seul flush"}),"\n",(0,a.jsx)(s.hr,{}),"\n",(0,a.jsx)(s.h2,{id:"ce-que-tu-as-appris-ici",children:"Ce que tu as appris ici"}),"\n",(0,a.jsx)(s.p,{children:"\u2714\ufe0f Comment envoyer plusieurs messages en une seule fois dans un topic Kafka\n\u2714\ufe0f Comment utiliser Awaitility pour attendre la r\xe9ception des messages dans le topic Kafka\n\u2714\ufe0f Comment v\xe9rifier que les messages re\xe7us correspondent \xe0 ceux envoy\xe9s\n\u2714\ufe0f Comment configurer un test d\u2019int\xe9gration pour v\xe9rifier l\u2019envoi de plusieurs messages"}),"\n",(0,a.jsx)(s.hr,{}),"\n",(0,a.jsx)(s.h2,{id:"-\xe0-suivre",children:"\ud83d\udcda \xc0 suivre"}),"\n",(0,a.jsx)(s.p,{children:"\u2705 Envoi d'objets m\xe9tier en JSON\n\u2705 Utilisation de Jackson pour s\xe9rialiser des objets m\xe9tier en JSON\n\u2705 Utilisation de KafkaJsonSchemaSerializer pour consommer des objets JSON\n\u2705 Utilisation de KafkaJsonSchemaDeserializer pour d\xe9s\xe9rialiser des objets JSON"}),"\n",(0,a.jsx)(s.h2,{id:"\ufe0f-\xe0-faire",children:"\u270d\ufe0f \xc0 faire"}),"\n",(0,a.jsx)(s.p,{children:"Tester des messages avec la m\xeame cl\xe9"}),"\n",(0,a.jsx)(s.p,{children:"Ajouter un timestamp personnalis\xe9 dans le ProducerRecord"}),"\n",(0,a.jsx)(s.p,{children:"Tester la r\xe9ception hors ordre (exercice avanc\xe9)"})]})}function d(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}}}]);