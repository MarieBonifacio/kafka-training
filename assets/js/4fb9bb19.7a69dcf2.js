"use strict";(self.webpackChunkkafka_training=self.webpackChunkkafka_training||[]).push([[900],{3370:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"04-envoi-objets-metier-JSON","title":"Envoi d\'objets m\xe9tier en JSON","description":"Ce document explique comment envoyer des objets m\xe9tier en JSON en utilisant Kafka.","source":"@site/docs/04-Envoi-objets-metier-JSON.md","sourceDirName":".","slug":"/04-envoi-objets-metier-JSON","permalink":"/kafka-training/docs/04-envoi-objets-metier-JSON","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/04-Envoi-objets-metier-JSON.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"id":"04-envoi-objets-metier-JSON","title":"Envoi d\'objets m\xe9tier en JSON","description":"Ce document explique comment envoyer des objets m\xe9tier en JSON en utilisant Kafka."},"sidebar":"tutorialSidebar","previous":{"title":"Envoi de messages multiples","permalink":"/kafka-training/docs/03-envoi-messages-multiples"},"next":{"title":"Mod\xe9liser un objet m\xe9tier imbriqu\xe9 en JSON","permalink":"/kafka-training/docs/05-modeliser-objet-imbrique"}}');var a=r(4848),i=r(8453);const o={id:"04-envoi-objets-metier-JSON",title:"Envoi d'objets m\xe9tier en JSON",description:"Ce document explique comment envoyer des objets m\xe9tier en JSON en utilisant Kafka."},t=void 0,c={},d=[{value:"\ud83c\udfaf Objectif",id:"-objectif",level:2},{value:"Ce qu\u2019on va couvrir :",id:"ce-quon-va-couvrir-",level:2},{value:"\ud83e\udde0 Pourquoi Jackson ?",id:"-pourquoi-jackson-",level:2},{value:"\ud83e\uddea Exemple concret : l&#39;objet <code>Person</code>",id:"-exemple-concret--lobjet-person",level:2},{value:"R\xe9sum\xe9 des fichiers \xe0 ce stade :",id:"r\xe9sum\xe9-des-fichiers-\xe0-ce-stade-",level:3},{value:"\ud83d\udce6 Ajouter Jackson et les s\xe9rializers Kafka",id:"-ajouter-jackson-et-les-s\xe9rializers-kafka",level:2},{value:"\ud83d\udee0\ufe0f Producteur Kafka avec Jackson",id:"\ufe0f-producteur-kafka-avec-jackson",level:2},{value:"Test d\u2019int\xe9gration avec Awaitility",id:"test-dint\xe9gration-avec-awaitility",level:2},{value:"\u2705 Ce que tu as appris ici",id:"-ce-que-tu-as-appris-ici",level:2},{value:"\ud83d\udcda \xc0 suivre",id:"-\xe0-suivre",level:2}];function l(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"-objectif",children:"\ud83c\udfaf Objectif"}),"\n",(0,a.jsx)(n.p,{children:"Passer de simples cha\xeenes de caract\xe8res (String) \xe0 des objets Java (POJO) envoy\xe9s et re\xe7us via Kafka, en les s\xe9rialisant/d\xe9s\xe9rialisant automatiquement en JSON."}),"\n",(0,a.jsx)(n.h2,{id:"ce-quon-va-couvrir-",children:"Ce qu\u2019on va couvrir :"}),"\n",(0,a.jsxs)(n.p,{children:["\u2705 Cr\xe9er un objet Java (",(0,a.jsx)(n.code,{children:"Person"}),")"]}),"\n",(0,a.jsx)(n.p,{children:"\u2705 L\u2019envoyer via Kafka apr\xe8s s\xe9rialisation JSON"}),"\n",(0,a.jsx)(n.p,{children:"\u2705 Le recevoir et le d\xe9s\xe9rialiser automatiquement gr\xe2ce \xe0 Jackson"}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h1,{id:"-s\xe9rialiser-des-objets-java-avec-jackson-dans-kafka",children:"\ud83d\udd04 S\xe9rialiser des objets Java avec Jackson dans Kafka"}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"-pourquoi-jackson-",children:"\ud83e\udde0 Pourquoi Jackson ?"}),"\n",(0,a.jsxs)(n.p,{children:["Kafka est con\xe7u pour transmettre des donn\xe9es sous forme de ",(0,a.jsx)(n.strong,{children:"tableaux d'octets"})," ou de ",(0,a.jsx)(n.strong,{children:"texte brut"}),". Cependant, dans les applications modernes, nous travaillons souvent avec des objets complexes (comme ",(0,a.jsx)(n.code,{children:"Person"}),"), qui ne peuvent pas \xeatre envoy\xe9s directement."]}),"\n",(0,a.jsx)(n.p,{children:"Pour r\xe9soudre ce probl\xe8me :"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["Nous utilisons ",(0,a.jsx)(n.strong,{children:"Jackson"})," pour convertir nos objets Java en JSON (s\xe9rialisation)."]}),"\n",(0,a.jsx)(n.li,{children:"\xc0 la r\xe9ception, nous utilisons Jackson pour reconvertir le JSON en objets Java (d\xe9s\xe9rialisation)."}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"JSON (JavaScript Object Notation) est un format l\xe9ger et lisible par les humains, id\xe9al pour transmettre des donn\xe9es structur\xe9es."}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsxs)(n.h2,{id:"-exemple-concret--lobjet-person",children:["\ud83e\uddea Exemple concret : l'objet ",(0,a.jsx)(n.code,{children:"Person"})]}),"\n",(0,a.jsx)(n.p,{children:"Voici une classe simple repr\xe9sentant un objet m\xe9tier :"}),"\n",(0,a.jsx)(n.p,{children:"\ud83d\udcc4 Fichier:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"src/main/java/com/example/kafka/model/Person.java\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'package com.example.kafka;\n\npublic class Person {\n    private String name;\n    private int age;\n\n    // Obligatoire pour Jackson (constructeur vide)\n    public Person() {}\n\n    public Person(String name, int age) {\n        this.name = name;\n        this.age = age;\n    }\n\n    // Getters et setters\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public int getAge() {\n        return age;\n    }\n\n    public void setAge(int age) {\n        this.age = age;\n    }\n\n    @Override\n    public String toString() {\n        return "Person{name=\'" + name + "\', age=" + age + "}";\n    }\n}\n'})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"\ud83d\udccc Jackson a besoin d\u2019un constructeur vide pour pouvoir instancier les objets lors de la d\xe9s\xe9rialisation."}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"r\xe9sum\xe9-des-fichiers-\xe0-ce-stade-",children:"R\xe9sum\xe9 des fichiers \xe0 ce stade :"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"src/\n\u2514\u2500\u2500 main/\n    \u2514\u2500\u2500 java/\n        \u2514\u2500\u2500 com/\n            \u2514\u2500\u2500 example/\n                \u2514\u2500\u2500 kafka/\n                    \u251c\u2500\u2500 service/\n                    \u2502   \u251c\u2500\u2500 KafkaProducerService.java\n                    \u2502   \u2514\u2500\u2500 KafkaConsumerService.java\n                    \u251c\u2500\u2500 model/\n                    \u2502   \u2514\u2500\u2500 Person.java\n                    \u2514\u2500\u2500 KafkaIntegrationTest.java  \u2190 (ou dans test/)\n"})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"-ajouter-jackson-et-les-s\xe9rializers-kafka",children:"\ud83d\udce6 Ajouter Jackson et les s\xe9rializers Kafka"}),"\n",(0,a.jsxs)(n.p,{children:["Pour utiliser Jackson et Kafka dans notre projet, nous devons ajouter les d\xe9pendances suivantes dans le fichier ",(0,a.jsx)(n.code,{children:"pom.xml"})," :"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-xml",children:" \x3c!-- Jackson core --\x3e\n<dependency>\n  <groupId>com.fasterxml.jackson.core</groupId>\n  <artifactId>jackson-databind</artifactId>\n  <version>2.15.2</version>\n</dependency>\n\n\x3c!-- Jackson Kafka (serializer + deserializer d\xe9j\xe0 pr\xeats) --\x3e\n<dependency>\n    <groupId>io.confluent</groupId>\n    <artifactId>kafka-json-schema-serializer</artifactId>\n    <version>7.5.0</version>\n</dependency>\n"})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Pourquoi ces d\xe9pendances ?\nJackson Databind : Permet de convertir des objets Java en JSON et vice-versa.\nKafka JSON Schema Serializer : Fournit des s\xe9rialiseurs et d\xe9s\xe9rialiseurs pr\xeats \xe0 l'emploi pour Kafka."}),"\n"]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"\ufe0f-producteur-kafka-avec-jackson",children:"\ud83d\udee0\ufe0f Producteur Kafka avec Jackson"}),"\n",(0,a.jsx)(n.p,{children:"\ud83d\udcc4 Fichier :"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"src/main/java/com/example/kafka/service/KafkaProducerServicePerson.java\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"\n---\n\n#### **4. Ajouter des explications dans le producteur Kafka :**\n```java\npublic void send(String topic, String key, Person person) {\n    // Configuration des propri\xe9t\xe9s du producteur Kafka\n    Properties props = new Properties();\n    props.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, bootstrapServers);\n    props.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class.getName());\n    props.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, KafkaJsonSchemaSerializer.class.getName());\n\n    // Cr\xe9ation du producteur Kafka\n    try (Producer<String, Person> producer = new KafkaProducer<>(props)) {\n        // Cr\xe9ation d'un enregistrement Kafka (message)\n        ProducerRecord<String, Person> record = new ProducerRecord<>(topic, key, person);\n\n        // Envoi asynchrone du message\n        producer.send(record);\n\n        // Vidage des messages en attente\n        producer.flush();\n    }\n}\n\n"})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["\ud83d\udfe8 Note : on utilise ",(0,a.jsx)(n.code,{children:"KafkaJsonSchemaSerializer"})," pour la s\xe9rialisation de l'objet ",(0,a.jsx)(n.code,{children:"Person"}),"."]}),"\n"]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"test-dint\xe9gration-avec-awaitility",children:"Test d\u2019int\xe9gration avec Awaitility"}),"\n",(0,a.jsxs)(n.p,{children:["Voici un exemple de test d'int\xe9gration complet pour valider l'envoi et la r\xe9ception d'un objet ",(0,a.jsx)(n.code,{children:"Person"})," dans Kafka."]}),"\n",(0,a.jsx)(n.p,{children:"\ud83d\udcc4 Fichier :"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"src/test/java/com/example/kafka/KafkaIntegrationTestPerson.java\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'@Test\nvoid testKafkaProducerWithPerson() {\n    // \xc9tape 1 : Configuration du producteur\n    KafkaProducerServicePerson producer = new KafkaProducerServicePerson(kafka.getBootstrapServers());\n    Person person = new Person("Alice", 30);\n    producer.send("test-topic", "key1", person);\n\n    // \xc9tape 2 : Configuration du consommateur\n    Properties props = new Properties();\n    props.put(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, kafka.getBootstrapServers());\n    props.put(ConsumerConfig.GROUP_ID_CONFIG, "test-group");\n    props.put(ConsumerConfig.AUTO_OFFSET_RESET_CONFIG, "earliest");\n    props.put(ConsumerConfig.KEY_DESERIALIZER_CLASS_CONFIG, StringDeserializer.class.getName());\n    props.put(ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG, StringDeserializer.class.getName());\n\n    Consumer<String, String> consumer = new KafkaConsumer<>(props);\n    consumer.subscribe(Collections.singletonList("test-topic"));\n\n    // \xc9tape 3 : Validation des messages re\xe7us\n    Awaitility.await()\n        .atMost(10, TimeUnit.SECONDS)\n        .untilAsserted(() -> {\n            ConsumerRecords<String, String> records = consumer.poll(Duration.ofMillis(500));\n            assertFalse(records.isEmpty(), "Aucun message re\xe7u");\n\n            for (ConsumerRecord<String, String> record : records) {\n                ObjectMapper mapper = new ObjectMapper();\n                Person received = mapper.readValue(record.value(), Person.class);\n\n                assertEquals(person.getName(), received.getName());\n                assertEquals(person.getAge(), received.getAge());\n            }\n        });\n\n    consumer.close();\n}\n'})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"-ce-que-tu-as-appris-ici",children:"\u2705 Ce que tu as appris ici"}),"\n",(0,a.jsx)(n.p,{children:"\u2714\ufe0f Comment utiliser Jackson pour transformer un objet Java en JSON dans Kafka"}),"\n",(0,a.jsx)(n.p,{children:"\u2714\ufe0f Comment configurer Kafka pour consommer ce JSON automatiquement"}),"\n",(0,a.jsx)(n.p,{children:"\u2714\ufe0f Comment r\xe9aliser un test d\u2019int\xe9gration de bout en bout avec des objets m\xe9tier"}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"-\xe0-suivre",children:"\ud83d\udcda \xc0 suivre"}),"\n",(0,a.jsx)(n.p,{children:"Tester plusieurs objets JSON"}),"\n",(0,a.jsx)(n.p,{children:"Ajouter des champs imbriqu\xe9s"}),"\n",(0,a.jsx)(n.p,{children:"G\xe9rer les erreurs de d\xe9s\xe9rialisation"})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>t});var s=r(6540);const a={},i=s.createContext(a);function o(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);